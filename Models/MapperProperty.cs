using FluentValidation;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace WorkUtilities.Models
{
    public class MapperProperty
    {
        public bool IsKey { get; set; } = false;
        public bool IsAutoGenerated { get; set; } = false;

        public bool IsIndex { get; set; } = false;
        public List<string> IndexGroup { get; set; }

        public string ParentName { get; set; }
        public string ParentKey { get; set; }

        public string Name { get; set; }
        public string NameDB { get; set; }

        public int? LengthMain { get; set; }
        public int? LengthDecimal { get; set; }
        public bool IsFixedLength { get; set; }
        public bool IsRequired { get; set; }

        public string Type { get; set; }
        public string TypeDB { get; set; }
    }

    public class MapperPropertyValidator : AbstractValidator<MapperProperty>
    {
        public MapperPropertyValidator()
        {
            RuleFor(x => x.Name).NotEmpty().WithMessage("Please specify a name");
            RuleFor(x => x.Type).NotEmpty().WithMessage("Please specify a type");
        }
    }
}
